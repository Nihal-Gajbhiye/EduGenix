name: Workflow Build Packer AMI

on:
  push:
    branches:
      - main

jobs:
  integration-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

  build-artifact-and-ami:
    needs: integration-test
    runs-on: ubuntu-latest

    env:  
      PACKER_LOG: 1
      PACKER_LOG_PATH: "packerlog.txt"
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Install Packer
      run: |
        wget https://releases.hashicorp.com/packer/1.7.6/packer_1.7.6_linux_amd64.zip
        unzip packer_1.7.6_linux_amd64.zip
        sudo mv packer /usr/local/bin/

    - name: Build Flask application artifact
      run: zip -r webapp.zip ./ -x "*.git*"

    - name: Build AMI with Packer
      run: |
        packer init .
        packer build -var "aws_region=$AWS_REGION" ./packer.pkr.hcl 

    # - name: Upload Packer logs
    #   if: always()  
    #   uses: actions/upload-artifact@v2
    #   with:
    #     name: packer-logs
    #     path: packerlog.txt

    # - name: Extract and Store AMI ID
    #   run: |
    #     AMI_ID=$(jq -r '.builds[-1].artifact_id' packer-manifest.json | cut -d ":" -f2)
    #     echo "Extracted AMI_ID: $AMI_ID"
    #     aws ssm put-parameter --region $AWS_REGION --name "/webapp/ami-id" --value "$AMI_ID" --type "String" --overwrite --debug
